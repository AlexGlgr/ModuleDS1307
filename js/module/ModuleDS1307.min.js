class ClassRTCSet{constructor(_day,_month,_year,_hour,_minute,_second){this.name="ClassRTCSet",this._date=void 0,this.Init(_day,_month,_year,_hour,_minute,_second)}static get ERROR_CODE_ARG_VALUE(){return 10}static get ERROR_MSG_ARG_VALUE(){return`ERROR>> invalid data. ClassID: ${this.name}`}Init(_day,_month,_year,_hour,_minute,_second){if(null!=_day&&null!=_month&&null!=_year&&null!=_hour&&null!=_minute&&null!=_second){let day=_day||1,month=_month||1,year=_year||1970,hour=_hour||12,minute=_minute||0,second=_second||0;if(!("number"==typeof day&&"number"==typeof month&&"number"==typeof year&&"number"==typeof hour&&"number"==typeof minute&&"number"==typeof second&&Number.isInteger(day)&&Number.isInteger(month)&&Number.isInteger(year)&&Number.isInteger(hour)&&Number.isInteger(minute)&&Number.isInteger(second)))throw new err(ClassRTCSet.ERROR_MSG_ARG_VALUE,ClassRTCSet.ERROR_CODE_ARG_VALUE);year<1970&&(year=1970),year>2100&&(year=2100),month<1&&(month=1),month>12&&(month=12),day<1&&(day=1),day=day>31&&1&month^month>>3&1?31:day>30&&!(1&month^month>>3&1)?30:day>28&&2==month?year%4?28:29:1,hour<0&&(hour=0),hour>23&&(hour=23),minute<0&&(minute=0),minute>59&&(minute=59),second<0&&(second=0),second>59&&(second=59),this._date=new Date(year,month,day,hour,minute,second)}}}class ClassRTC{static get ERROR_CODE_ARG_VALUE(){return 10}static get ERROR_MSG_ARG_VALUE(){return`ERROR>> invalid data. ClassID: ${this.name}`}constructor(_Pin){this.name="ClassRealTimeClock",PrimaryI2C.setup({sda:SDA,scl:SCL,bitrate:1e5}),this._rtc=require("https://raw.githubusercontent.com/AlexGlgr/ModuleDS1307/fork-Alexander/js/module/rtc.min.js").connect(PrimaryI2C)}SetTime(_opt){this._rtc.setTime(_opt)}SetTimeOf(_val,_key){if(!Number.isInteger(_val)||"string"!=typeof _key)throw new err(ClassRTC.ERROR_MSG_ARG_VALUE,ClassRTC.ERROR_CODE_ARG_VALUE);let temp=this._rtc._time,_year=temp.getFullYear(),_month=this._rtc._leadZero(temp.getMonth()+1),_day=this._rtc._leadZero(temp.getDate()),_hour=this._rct._leadZero(temp.getHours()),_minute=this._rtc._leadZero(temp.getMinutes()),_second=this._rct._leadZero(temp.getSeconds());switch(console.log(_key+"Hey!\n"),_key){case"yy":case"year":_val<1970&&(_val=1970),_val>2100&&(_val=2100),_year=_val,console.log("Hey!\n");break;case"MM":case"month":_val<1&&(_val=1),_val>12&&(_val=12),_month=_val-1;break;case"dd":case"day":_val<1&&(_val=1),_val>31&&1&date.month^date.month>>3&1?day=31:_val>30&&!(1&date.month^date.month>>3&1)?day=30:_val=_val>28&&2==date.month?date.year%4?28:29:1,_day=_val;break;case"hh":case"hours":_val<0&&(_val=0),_val>23&&(_val=23),_hour=_val;break;case"mm":case"minute":_val<0&&(_val=0),_val>59&&(_val=59),_minute=_val;break;case"ss":case"second":_val<0&&(_val=0),_val>59&&(_val=59),_second=_val;break;default:throw console.log("HeyNo!\n"),new err(ClassRTC.ERROR_MSG_ARG_VALUE,ClassRTC.ERROR_CODE_ARG_VALUE)}this._rtc.setTime(new Date(_year,_month-1,_day,_hour,_minute,_second))}GetTimeISO(){return this._rtc.getTime("iso")}GetTimeUnix(){return this._rtc.getTime("unixtime")}GetTimeHours(){let res=this._rtc.getTime("def");return res=this._rtc._leadZero(res.getHours())+":"+this._rtc._leadZero(res.getMinutes())+":"+this._rtc._leadZero(res.getSeconds()),res}}exports={ClassRTCSet:ClassRTCSet,ClassRTC:ClassRTC};